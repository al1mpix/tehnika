// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤
const brands = ["Apple", "Samsung", "Xiaomi", "Realme", "OnePlus", "Google", "Honor", "Vivo", "Oppo", "Sony"];
const smartphones = Array.from({length: 120}, (_, i) => {
    const brand = brands[Math.floor(Math.random() * brands.length)];
    let image = 'images/iphone.png';
    return {
        id: i+1,
        name: `${brand} Phone ${2025 - (i % 5)} (${i+1})`,
        brand,
        price: Math.floor(19990 + Math.random() * 80000),
        image,
        desc: `–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω ${brand} —Å –æ—Ç–ª–∏—á–Ω–æ–π –∫–∞–º–µ—Ä–æ–π –∏ –º–æ—â–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º.`
    };
});

// --- –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è, –ø–æ–∏—Å–∫, –ø–∞–≥–∏–Ω–∞—Ü–∏—è ---
const products = smartphones;
const productsGrid = document.getElementById('productsGrid');
const searchInput = document.getElementById('searchInput');
const minPriceInput = document.getElementById('minPrice');
const maxPriceInput = document.getElementById('maxPrice');
const brandList = document.getElementById('brandList');
const applyFiltersBtn = document.querySelector('.apply-filters');
const resetFiltersBtn = document.querySelector('.reset-filters');
const pagination = document.getElementById('pagination');

let filtered = [...products];
let currentPage = 1;
const perPage = 16;

function renderBrands() {
    const uniqueBrands = [...new Set(products.map(p => p.brand))];
    brandList.innerHTML = uniqueBrands.map(brand => `
        <li><label><input type="checkbox" value="${brand}"> ${brand}</label></li>
    `).join('');
}

function renderProducts() {
    const start = (currentPage-1)*perPage;
    const end = start+perPage;
    const pageProducts = filtered.slice(start, end);
    productsGrid.innerHTML = pageProducts.map(p => `
        <div class="product-card">
            <div class="product-image"><img src="${p.image}" alt="${p.name}" loading="lazy"></div>
            <div class="product-info">
                <h3>${p.name}</h3>
                <div class="product-price">${p.price.toLocaleString()} ‚ÇΩ</div>
                <button class="btn btn-primary add-to-cart" data-id="${p.id}">–í –∫–æ—Ä–∑–∏–Ω—É</button>
                <button class="btn quick-order-btn" style="background:#C0FFEE;color:#222;margin-top:8px;" data-id="${p.id}">–û—Ñ–æ—Ä–º–∏—Ç—å –±—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑</button>
                <button class="btn btn-wishlist" data-id="${p.id}">‚ô° –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</button>
            </div>
        </div>
    `).join('');
    renderPagination();
    updateWishlistButtonsState();
}

function renderPagination() {
    const pages = Math.ceil(filtered.length/perPage);
    let html = '';
    for(let i=1;i<=pages;i++) {
        html += `<a href="#" class="page${i===currentPage?' active':''}" data-page="${i}">${i}</a>`;
    }
    pagination.innerHTML = html;
}

function updateWishlistButtonsState() {
    document.querySelectorAll('.btn-wishlist').forEach(btn => {
        const id = btn.getAttribute('data-id');
        if (isInWishlist(id)) {
            btn.classList.add('active');
            btn.innerHTML = '&#10084; –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º';
        } else {
            btn.classList.remove('active');
            btn.innerHTML = '‚ô° –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ';
        }
    });
}

function applyFilters() {
    let brandsChecked = Array.from(brandList.querySelectorAll('input:checked')).map(i=>i.value);
    let min = parseInt(minPriceInput.value)||0;
    let max = parseInt(maxPriceInput.value)||Infinity;
    let search = (searchInput.value||'').toLowerCase();
    filtered = products.filter(p =>
        (brandsChecked.length===0 || brandsChecked.includes(p.brand)) &&
        p.price >= min && p.price <= max &&
        (p.name.toLowerCase().includes(search) || p.desc.toLowerCase().includes(search))
    );
    currentPage = 1;
    renderProducts();
    if (typeof updateCartCount === 'function') updateCartCount();
}

searchInput.addEventListener('input', applyFilters);
applyFiltersBtn.addEventListener('click', applyFilters);
resetFiltersBtn.addEventListener('click', ()=>{
    minPriceInput.value = '';
    maxPriceInput.value = '';
    brandList.querySelectorAll('input').forEach(i=>i.checked=false);
    searchInput.value = '';
    applyFilters();
});
brandList.addEventListener('change', applyFilters);
pagination.addEventListener('click', e=>{
    if(e.target.classList.contains('page')) {
        e.preventDefault();
        currentPage = +e.target.dataset.page;
        renderProducts();
    }
});

// --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É ---
function getCart() {
    return JSON.parse(localStorage.getItem('cart') || '[]');
}
function setCart(cart) {
    localStorage.setItem('cart', JSON.stringify(cart));
}
function addToCart(product) {
    let cart = getCart();
    // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –µ—Å—Ç—å, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º qty
    let found = cart.find(i => i.id == product.id);
    if (found) {
        found.qty = (found.qty || 1) + 1;
    } else {
        cart.push({
            id: product.id,
            name: product.name,
            price: product.price,
            image: product.image,
            qty: 1
        });
    }
    setCart(cart);
    showNotification && showNotification('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!');
    // –û–±–Ω–æ–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã, –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –µ—Å—Ç—å
    if (typeof updateCartCount === 'function') updateCartCount();
}

// –ï–¥–∏–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–µ—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
productsGrid.addEventListener('click', function(e) {
    const target = e.target;
    // –ë—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑
    if (target.classList.contains('quick-order-btn')) {
        const card = target.closest('.product-card');
        const name = card.querySelector('h3').textContent;
        const price = card.querySelector('.product-price')?.textContent?.replace(/\D/g, '') || '';
        const image = card.querySelector('img')?.getAttribute('src') || '';
        const fastOrder = [{ name, price: parseInt(price), image, qty: 1 }];
        localStorage.setItem('fastOrder', JSON.stringify(fastOrder));
        window.location.href = 'checkout.html';
        return;
    }

    // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–í –∫–æ—Ä–∑–∏–Ω—É"
    if (target.classList.contains('add-to-cart')) {
        const id = target.getAttribute('data-id');
        const product = filtered.find(p => p.id == id);
        if (product) addToCart(product);
        return;
    }

    // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
    if (target.classList.contains('btn-wishlist')) {
        const id = target.getAttribute('data-id');
        const product = filtered.find(p => p.id == id);
        if (!product) return;

        const user = JSON.parse(localStorage.getItem('currentUser') || 'null');
        if (!user) {
            showNotification && showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç.');
            return;
        }

        if (isInWishlist(id)) {
            // –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
            if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ—Ç —Ç–æ–≤–∞—Ä –ø–ª–∞–∫–∞–ª, –∫–æ–≥–¥–∞ –µ–≥–æ –¥–æ–±–∞–≤–ª—è–ª–∏ üò¢')) {
                removeFromWishlist(id);
                target.classList.remove('active');
                target.innerHTML = '‚ô° –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ';
                showNotification && showNotification('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
            }
        } else {
            addToWishlist(product);
            target.classList.add('active');
            target.innerHTML = '&#10084; –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º';
            showNotification && showNotification('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ');
        }
        return;
    }

    // –ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const card = target.closest('.product-card');
    if (card) {
        const name = card.querySelector('h3').textContent;
        const product = filtered.find(p => p.name === name);
        if (product) showProductModal(product);
    }
});

// --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º ---
function getWishlist() {
    const user = JSON.parse(localStorage.getItem('currentUser')||'null');
    return (user && user.wishlist) ? user.wishlist : [];
}
function setWishlist(wishlist) {
    const user = JSON.parse(localStorage.getItem('currentUser')||'null');
    if (user) {
        user.wishlist = wishlist;
        localStorage.setItem('currentUser', JSON.stringify(user));
    }
}
function isInWishlist(id) {
    return getWishlist().some(p => p.id == id);
}
function addToWishlist(product) {
    const wishlist = getWishlist();
    if (!wishlist.some(p => p.id == product.id)) {
        wishlist.push(product);
        setWishlist(wishlist);
    }
}
function removeFromWishlist(id) {
    let wishlist = getWishlist();
    wishlist = wishlist.filter(p => p.id != id);
    setWishlist(wishlist);
}

// --- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ ---
function createModal() {
    let modal = document.getElementById('productModal');
    if (!modal) {
        modal = document.createElement('div');
        modal.id = 'productModal';
        modal.className = 'modal';
        modal.innerHTML = `
            <div class="modal-content">
                <span class="close-modal">&times;</span>
                <div class="modal-body"></div>
            </div>
        `;
        document.body.appendChild(modal);
        modal.querySelector('.close-modal').onclick = () => modal.style.display = 'none';
        modal.onclick = e => { if (e.target === modal) modal.style.display = 'none'; };
    }
    return modal;
}

function getSmartphoneSpecs(product) {
    // –ü—Ä–∏–º–µ—Ä–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞
    return [
        ['–≠–∫—Ä–∞–Ω', '6.7" AMOLED, 120 –ì—Ü'],
        ['–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä', '8-—è–¥–µ—Ä–Ω—ã–π, 3.2 –ì–ì—Ü'],
        ['–ü–∞–º—è—Ç—å', '8 –ì–ë –û–ó–£, 256 –ì–ë –ü–ó–£'],
        ['–ö–∞–º–µ—Ä–∞', '108 –ú–ø + 12 –ú–ø + 8 –ú–ø'],
        ['–ë–∞—Ç–∞—Ä–µ—è', '5000 –º–ê—á'],
        ['SIM', '2 x nanoSIM'],
        ['–û–°', 'Android 14 / iOS 18'],
        ['–í–µ—Å', '195 –≥'],
        ['–ë—Ä–µ–Ω–¥', product.brand],
    ];
}

function showProductModal(product) {
    const modal = createModal();
    const specs = getSmartphoneSpecs(product);
    
    // –°–æ–∑–¥–∞–µ–º —Ö–∞–π–∫—É –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞
    const haikuDesc = generateSmartphoneHaiku(product);
    
    modal.querySelector('.modal-body').innerHTML = `
        <div class="modal-product">
            <div class="modal-product-image"><img src="${product.image}" alt="${product.name}"></div>
            <div class="modal-product-info">
                <h2>${product.name}</h2>
                <div class="modal-product-price">${product.price.toLocaleString()} ‚ÇΩ</div>
                <div class="modal-product-desc haiku-desc">
                    ${haikuDesc}
                </div>
                <h4>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h4>
                <table class="modal-specs-table">
                    ${specs.map(row => `<tr><td>${row[0]}</td><td>${row[1]}</td></tr>`).join('')}
                </table>
                <button class="btn btn-primary add-to-cart-modal">–í –∫–æ—Ä–∑–∏–Ω—É</button>
            </div>
        </div>
    `;
    modal.style.display = 'block';
    modal.querySelector('.add-to-cart-modal').onclick = () => {
        alert('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É (–¥–µ–º–æ)');
        modal.style.display = 'none';
    };
}

function generateSmartphoneHaiku(product) {
    const haikus = [
        '–¢–∏—Ö–∏–π —à–µ–ª–µ—Å—Ç —ç–∫—Ä–∞–Ω–∞ ‚Äî –∫–∞–ø–ª—è —Ä–æ—Å—ã –Ω–∞ —Å—Ç–µ–∫–ª–µ.<br>–≠–∫—Ä–∞–Ω OLED 6.7", –ø–∞–º—è—Ç—å 256 –ì–ë, —Å—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ ‚Äî 2 –ª—É–Ω—ã.',
        '–£—Ç—Ä–µ–Ω–Ω–∏–π –∑–≤–æ–Ω–æ–∫ ‚Äî —Ç–µ–Ω–∏ —Ç–∞–Ω—Ü—É—é—Ç –Ω–∞ –¥–∏—Å–ø–ª–µ–µ.<br>–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä 8-—è–¥–µ—Ä–Ω—ã–π, –∫–∞–º–µ—Ä–∞ 108 –ú–ø, —Å—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ ‚Äî 3 –ª—É–Ω—ã.',
        '–í–µ—á–µ—Ä–Ω–∏–π —Å–≤–µ—Ç ‚Äî –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ –≤ —á–µ—Ä–Ω–æ–º —Å—Ç–µ–∫–ª–µ.<br>–ë–∞—Ç–∞—Ä–µ—è 5000 –º–ê—á, –±—ã—Å—Ç—Ä–∞—è –∑–∞—Ä—è–¥–∫–∞, —Å—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ ‚Äî 2 –ª—É–Ω—ã.',
        '–õ—É–Ω–Ω—ã–π —Å–≤–µ—Ç ‚Äî —Ç–∏—à–∏–Ω–∞ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Å–∞–¥–∞.<br>–≠–∫—Ä–∞–Ω AMOLED, –ø–∞–º—è—Ç—å 512 –ì–ë, —Å—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ ‚Äî 1 –ª—É–Ω–∞.',
        '–ö–∞–ø–ª—è –¥–æ–∂–¥—è ‚Äî –∑–≤–æ–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —Ç–∏—à–∏–Ω–µ.<br>–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä Snapdragon, –∫–∞–º–µ—Ä–∞ 64 –ú–ø, —Å—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ ‚Äî 2 –ª—É–Ω—ã.'
    ];
    
    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Ö–∞–π–∫—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω–¥–µ–∫—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ ID —Ç–æ–≤–∞—Ä–∞
    const index = (product.id || 0) % haikus.length;
    return haikus[index];
}

renderBrands();
applyFilters(); 