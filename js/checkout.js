// –ü–æ—à–∞–≥–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞

document.addEventListener('DOMContentLoaded', function() {
    const steps = Array.from(document.querySelectorAll('.checkout-steps .step'));
    const formSteps = Array.from(document.querySelectorAll('.form-step'));
    const nextBtns = document.querySelectorAll('.next-step');
    const prevBtns = document.querySelectorAll('.prev-step');
    const orderForm = document.getElementById('orderForm');

    let currentStep = 0;

    // --- –ü—Ä–æ–º–æ–∫–æ–¥—ã ---
    const PROMO_CODES = { 'SALE5000': 5000, 'NEON2025': 2025 };
    let appliedPromo = { code: '', discount: 0 };
    let deliveryPrice = 350;

    function showStep(index) {
        formSteps.forEach((step, i) => {
            step.classList.toggle('active', i === index);
        });
        steps.forEach((step, i) => {
            step.classList.toggle('active', i === index);
        });
        currentStep = index;
        // –ê–≤—Ç–æ—Ñ–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤–æ–º –ø–æ–ª–µ —à–∞–≥–∞
        const firstInput = formSteps[index].querySelector('input:not([type="checkbox"]):not([type="radio"])');
        if (firstInput) firstInput.focus();
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Ñ–æ—Ä–º–µ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
        if (window.innerWidth < 700) {
            formSteps[index].scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —à–∞–≥–æ–≤ –ø–æ –∫–Ω–æ–ø–∫–∞–º
    nextBtns.forEach(btn => {
        btn.addEventListener('click', function() {
            const next = parseInt(this.dataset.next) - 1;
            if (validateStep(currentStep)) {
                showStep(next);
            }
        });
    });
    prevBtns.forEach(btn => {
        btn.addEventListener('click', function() {
            const prev = parseInt(this.dataset.prev) - 1;
            showStep(prev);
        });
    });

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —à–∞–≥–æ–≤ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —à–∞–≥
    steps.forEach((step, i) => {
        step.addEventListener('click', function() {
            if (i <= currentStep) showStep(i);
        });
    });

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞
    function validateStep(stepIdx) {
        const step = formSteps[stepIdx];
        let valid = true;
        const requiredFields = step.querySelectorAll('input[required], select[required]');
        requiredFields.forEach(field => {
            if (!field.value.trim() || (field.type === 'checkbox' && !field.checked)) {
                field.classList.add('invalid');
                valid = false;
            } else {
                field.classList.remove('invalid');
            }
        });
        if (!valid) {
            // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–µ—Ä–≤–æ–º—É –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–º—É –ø–æ–ª—é
            const firstInvalid = step.querySelector('.invalid');
            if (firstInvalid) firstInvalid.focus();
        }
        return valid;
    }

    // –£–±–∏—Ä–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –≤–≤–æ–¥–µ
    orderForm.addEventListener('input', function(e) {
        if (e.target.classList.contains('invalid')) {
            e.target.classList.remove('invalid');
        }
    });

    // –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
    document.getElementById('placeOrderBtn')?.addEventListener('click', function() {
        localStorage.removeItem('fastOrder');
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = JSON.parse(localStorage.getItem('currentUser')||'null');
        let cart = JSON.parse(localStorage.getItem('cart')||'[]');
        if (user && cart.length) {
            let orders = user.orders || [];
            let total = cart.reduce((sum, i) => sum + i.price * (i.qty||1), 0);
            let order = {
                id: Date.now(),
                date: new Date().toLocaleString('ru-RU', {day:'2-digit', month:'long', year:'numeric', hour:'2-digit', minute:'2-digit'}),
                items: cart.map(i => ({name: i.name, price: i.price, qty: i.qty||1, image: i.image})),
                total,
                status: '–û—Ñ–æ—Ä–º–ª–µ–Ω'
            };
            orders.unshift(order);
            user.orders = orders;
            localStorage.setItem('currentUser', JSON.stringify(user));
        }
        // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
        localStorage.setItem('cart', '[]');
        showNotification('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!');
        setTimeout(function() {
            window.location.href = 'index.html';
        }, 1200);
    });

    // --- –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ---
    function showNotification(message) {
        let n = document.createElement('div');
        n.className = 'notification';
        n.textContent = message;
        n.style.position = 'fixed';
        n.style.bottom = '40px';
        n.style.left = '50%';
        n.style.transform = 'translateX(-50%)';
        n.style.background = 'rgba(0,0,0,0.92)';
        n.style.color = '#fff';
        n.style.padding = '16px 32px';
        n.style.borderRadius = '12px';
        n.style.fontSize = '1.1rem';
        n.style.zIndex = '9999';
        n.style.boxShadow = '0 4px 24px #00eaff55';
        document.body.appendChild(n);
        setTimeout(()=>n.classList.add('show'), 50);
        setTimeout(()=>{n.classList.remove('show'); setTimeout(()=>n.remove(), 300);}, 2200);
    }

    // –í—ã–≤–æ–¥–∏–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –≤ —Å–∞–π–¥–±–∞—Ä –∑–∞–∫–∞–∑–∞
    function getOrderItems() {
        const fastOrder = JSON.parse(localStorage.getItem('fastOrder') || 'null');
        if (fastOrder && Array.isArray(fastOrder) && fastOrder.length) {
            return fastOrder;
        }
        return JSON.parse(localStorage.getItem('cart') || '[]');
    }

    function renderOrderSidebar() {
        const sidebarItems = document.querySelector('.order-summary-sidebar .order-items');
        if (!sidebarItems) return;
        let items = getOrderItems();
        if (items.length === 0) {
            sidebarItems.innerHTML = '<div style="color:#b8eaff;opacity:0.7;padding:16px 0;">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</div>';
            return;
        }
        sidebarItems.innerHTML = items.map((item, index) => `
            <div class="order-item">
                <span class="order-item-title">${item.name}</span>
                <span class="order-item-qty">${item.qty || 1} —à—Ç.</span>
                <span class="order-item-price">${item.price} ‚ÇΩ</span>
                <button class="remove-item-btn" data-index="${index}" style="background:none;border:none;color:#e74c3c;cursor:pointer;font-size:1.2rem;margin-left:8px;" title="–£–¥–∞–ª–∏—Ç—å">&times;</button>
            </div>
        `).join('');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
        sidebarItems.addEventListener('click', function(e) {
            if (e.target.classList.contains('remove-item-btn')) {
                const index = parseInt(e.target.dataset.index);
                const itemName = items[index]?.name || '—Ç–æ–≤–∞—Ä';
                
                // –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
                if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã? ${itemName} –ø–ª–∞–∫–∞–ª, –∫–æ–≥–¥–∞ –µ–≥–æ –¥–æ–±–∞–≤–ª—è–ª–∏ –≤ –∑–∞–∫–∞–∑ üò¢`)) {
                    // –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–∫–∞–∑–∞ –∏–ª–∏ –∫–æ—Ä–∑–∏–Ω—ã
                    const fastOrder = JSON.parse(localStorage.getItem('fastOrder') || 'null');
                    if (fastOrder && Array.isArray(fastOrder) && fastOrder.length) {
                        fastOrder.splice(index, 1);
                        localStorage.setItem('fastOrder', JSON.stringify(fastOrder));
                    } else {
                        let cart = JSON.parse(localStorage.getItem('cart') || '[]');
                        cart.splice(index, 1);
                        localStorage.setItem('cart', JSON.stringify(cart));
                    }
                    
                    // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–∞–π–¥–±–∞—Ä –∏ –∏—Ç–æ–≥–∏
                    renderOrderSidebar();
                    renderOrderTotals();
                    showNotification('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∑–∞–∫–∞–∑–∞!');
                }
            }
        });
    }
    renderOrderSidebar();

    // --- –†–µ–Ω–¥–µ—Ä –∏—Ç–æ–≥–æ–≤ –∑–∞–∫–∞–∑–∞ ---
    function renderOrderTotals() {
        const items = getOrderItems();
        const orderTotals = document.querySelectorAll('.order-totals');
        let total = items.reduce((sum, i) => sum + i.price * (i.qty||1), 0);
        let delivery = document.getElementById('pickup')?.checked ? 0 : deliveryPrice;
        let discount = appliedPromo.discount && total > 0 ? Math.min(appliedPromo.discount, total) : 0;
        let grandTotal = total + delivery - discount;
        orderTotals.forEach(block => {
            block.innerHTML = `
                <div class="total-row"><span>–¢–æ–≤–∞—Ä—ã (${items.length})</span><span>${total.toLocaleString()} ‚ÇΩ</span></div>
                <div class="total-row"><span>–î–æ—Å—Ç–∞–≤–∫–∞</span><span>${delivery ? delivery + ' ‚ÇΩ' : '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ'}</span></div>
                ${appliedPromo.code && discount > 0 ? `<div class="total-row promo"><span>–ü—Ä–æ–º–æ–∫–æ–¥</span><span>- ${discount.toLocaleString()} ‚ÇΩ</span></div>` : ''}
                <div class="total-row grand-total"><span>–ò—Ç–æ–≥–æ</span><span>${grandTotal.toLocaleString()} ‚ÇΩ</span></div>
            `;
        });
    }

    // --- –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ ---
    const promoInput = document.getElementById('promo');
    const applyPromoBtn = document.getElementById('applyPromo');
    const promoMessage = document.getElementById('promoMessage');
    if (applyPromoBtn && promoInput) {
        applyPromoBtn.addEventListener('click', function() {
            const val = promoInput.value.trim().toUpperCase();
            if (PROMO_CODES[val]) {
                appliedPromo = { code: val, discount: PROMO_CODES[val] };
                promoMessage.textContent = `–ü—Ä–æ–º–æ–∫–æ–¥ ${val} –ø—Ä–∏–º–µ–Ω—ë–Ω: -${PROMO_CODES[val].toLocaleString()} ‚ÇΩ`;
                promoMessage.style.color = '#00eaff';
            } else {
                appliedPromo = { code: val, discount: 0 };
                promoMessage.textContent = '–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω';
                promoMessage.style.color = '#e74c3c';
            }
            renderOrderTotals();
        });
    }

    // --- –ü–µ—Ä–µ—Å—á—ë—Ç –∏—Ç–æ–≥–æ–≤ –ø—Ä–∏ —Å–º–µ–Ω–µ –¥–æ—Å—Ç–∞–≤–∫–∏ ---
    document.querySelectorAll('input[name="delivery"]').forEach(radio => {
        radio.addEventListener('change', renderOrderTotals);
    });

    // --- –ü–µ—Ä–µ—Å—á—ë—Ç –∏—Ç–æ–≥–æ–≤ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –ø–æ —à–∞–≥–∞–º ---
    nextBtns.forEach(btn => {
        btn.addEventListener('click', renderOrderTotals);
    });
    prevBtns.forEach(btn => {
        btn.addEventListener('click', renderOrderTotals);
    });

    // --- –ü–µ—Ä–µ—Å—á—ë—Ç –∏—Ç–æ–≥–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ---
    renderOrderTotals();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    showStep(0);

    // –û—á–∏—â–∞–µ–º fastOrder –ø–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏–ª–∏ —É—Ö–æ–¥–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.addEventListener('beforeunload', function() {
        localStorage.removeItem('fastOrder');
    });
}); 